@using Microsoft.AspNet.Identity
@using BugTracker.Helpers
@model BugTracker.Models.Ticket

@{
    ViewBag.Title = "Dashboard";
    TicketHelper ticketHelper = new TicketHelper();

}

<div class="container">
    <div class="row">
        <div class="col-md-offset-1 col-md-10">
            @*show project data*@
            <p>Project Data</p>
            <br />
            <h2>Project Name: @Model.Project.Name</h2>
            <h2>Project Created: @Model.Project.Created</h2>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            @*show ticket data*@
            <h5>Issue: @Model.Issue</h5>
            <h5>Priority: @Model.TicketPriority.Name</h5>
            <h5>Status: @Model.TicketStatus.Name</h5>
            <h5>Type: @Model.TicketType.Name</h5>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            @*show ticket comments*@
            <p> Number of Comments for this ticket: @Model.Comments.Count</p>
            @if (Model.Comments.Count != 0)
            {
                <table class="table">
                    <tr>
                        <th>
                            Employee
                        </th>
                        <th>
                            Comment
                        </th>
                        <th>
                            Posted On
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model.Comments)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.User.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Comment)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Created)
                            </td>
                            <td>
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                @Html.ActionLink("Details", "Details", new { id = item.Id })
                            </td>
                        </tr>
                    }

                </table>
            }
            else
            {
                <h4>No Comments have been made for this ticket.</h4>
            }


            @if (ticketHelper.CanMakeComment(Model.Id))
            {

                using (Html.BeginForm("Create", "TicketComments", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <br />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.Hidden("TicketId", Model.Id)

                        <div class="form-group">
                            @Html.Label("Comment", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextArea("Comment", new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-2 col-md-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                        </div>
                    </div>
                }
            }
        </div>
        <div class="col-md-6">
            @*show ticket attachment*@
            @*a mechanism for adding a new attachment - maybe a form*@
            @using (Html.BeginForm("Create", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.Hidden("TicketId", Model.Id)

                <div class="form-group">
                    @Html.Label("File Name", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Editor("FileName", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextArea("AttachmentDescription", new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Attachment", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input type="file" name="attachment" />
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Add Attachment" class="btn btn-primary" style="width: 100%" />
                    </div>
                </div>
            }

            @*a mechanism for displaying and viewing existing attachments - maybe a table*@
            <hr />
            <table class="table">
                <thead>
                    <tr>
                        <th>
                            Icon
                        </th>
                        <th>
                            Name
                        </th>
                        <th>
                            Description
                        </th>
                        <th>
                            
                        </th>

                    </tr>

                </thead>

                <tbody>
                    @foreach (var attachment in Model.Attachments.ToList())
                    {
                    <tr>
                        <td>
                            @*Icon goes here*@
                        </td>
                        <td>@Html.DisplayFor(modelitem => attachment.FileName)</td>
                        <td>@Html.DisplayFor(modelitem => attachment.Description)</td>
                        <td><a target="_blank" href="@attachment.FilePath">@attachment.FilePath</a>
                        </td>
                    </tr>

                    }
                </tbody>

            </table>



        </div>
    </div>
</div>