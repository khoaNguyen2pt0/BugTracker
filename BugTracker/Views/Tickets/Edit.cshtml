@model BugTracker.Models.Ticket
@{
    ViewBag.Title = "Edit";
}

<style>

    .row {
        margin-left: 40px;
        margin-right: 40px;
    }
</style>

<br />
<div class="row">
    <div class="col">
        <h2>Edit Ticket @Model.Id</h2>

    </div>
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="row">
        <div class="col">
            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.ProjectId)
                @Html.HiddenFor(model => model.Created)

                <div class="form-group">
                    @Html.Label("Ticket Priority", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketPriorityId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketPriorityId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Ticket Status", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketStatusId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketStatusId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Ticket Type", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("TicketTypeId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TicketTypeId, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (User.IsInRole("Project Manager"))
                {
                    <div class="form-group">
                        @Html.Label("Developer", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("DeveloperId", null, "-- Assign A Developer --", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.DeveloperId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                }

                <div class="form-group">
                    @Html.Label("Issue", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Description", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.IssueDescription, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.IssueDescription, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" style="font-size:2rem" />
                    </div>
                </div>
            </div>
        </div>

    </div>
}

<div class="row">
    <div class="col">
        @Html.ActionLink("Back to List", "Index")

    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
